if [ ! -d /app/.heroku/miniconda ]; then
    puts-step "Preparing Python/Miniconda Environment"
    curl -Os https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh
    bash Miniconda2-latest-Linux-x86_64.sh -p /app/.heroku/miniconda/ -b | indent
    rm -fr Miniconda-latest-Linux-x86_64.sh

    conda install pip --yes | indent
fi

echo "nomkl" > $HOME/.heroku/miniconda/conda-meta/pinned
puts-step "added pinned file in $HOME/.heroku/miniconda/conda-meta/pinned"
conda install nomkl

if [ -f conda-requirements.txt ]; then
   # This step will cause us to use newer package channels and get updated
   # libraries
   puts-step "Updating conda..." | indent
   conda update -n base conda --yes | indent

   # This step is necessary because Anaconda recently removed the pkgs/free
   # from the list of default channels. Because this script pulls down
   # the latest miniconda, as of 4.7, this will break for dependencies that
   # older and possibly not included in the pkgs/main channel. For example,
   # pandas-0.19.2 is not available in pkgs/main, but is available in pkgs/main,
   # so a build that depends on this version of the package will fail.
   #
   # See: https://www.anaconda.com/why-we-removed-the-free-channel-in-conda-4-7/
   puts-step "Allowing free packages..." | indent
   conda config --set restore_free_channel true

   puts-step "Installing dependencies using Conda"
   conda install --file conda-requirements.txt --yes | indent
fi

if [ -f requirements.txt ]; then
    puts-step "Installing dependencies using Pip"
    pip install -r requirements.txt  --exists-action=w --allow-all-external | indent
fi

# Clean up the installation environment .
conda clean -pt --yes > /dev/null
